# main.yml

# Workflow's name
name: Build Electron App For Win/Mac/Web

# Workflow's trigger
on:
  push:
    tags:
      - "v*.*.*"

# Workflow's jobs
jobs:
  # job's id
  release:
    # job's name
    name: build and release electron app

    # the type of machine to run the job on
    runs-on: ${{ matrix.os }}

    # create a build matrix for jobs
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, macos-10.15, macos-latest]

    # create steps
    steps:
      # step1: check out repository
      - name: Check out git repository
        uses: actions/checkout@v2

      # step2: install node env
      - name: Install Node.js
        uses: actions/setup-node@v2-beta

      # step3: npm install
      - name: npm install
        run: |
          npm install

      # step4: windows install electron --arch=ia32
      - name: windows npm install electron
        if: matrix.os == 'windows-2019'
        run: |
          npm install electron --arch=ia32

      # step5: build electron app
      - name: build electron
        if: matrix.os != 'macos-latest'
        run: |
          npm run release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      # step6: build web app
      - name: build web app
        if: matrix.os == 'macos-latest'
        run: |
          npm run build:web

      # step7: Archive production artifacts
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-build-artifacts
          path: |
            Dockerfile
            Dockerfile.desktop
            Dockerfile.web
            conf.d/**
            dist/web/**
            build/*.*
            !build/builder-debug.yml

  make_docker_image:
    name: make docker image
    needs: release
    runs-on: ubuntu-18.04
    steps:
      - name: Download math result
        uses: actions/download-artifact@v2
        with:
          name: dist-build-artifacts
      - name: build docker image and push aliyun docker registry
        run: |
          ls -al
          docker login -u ${{ secrets.ALI_DOCKER_HUB_ACCOUNT }} -p ${{ secrets.ALI_DOCKER_HUB_PASSWORD }} registry.cn-hangzhou.aliyuncs.com
          docker build . -t registry.cn-hangzhou.aliyuncs.com/palan/eregistry-web -f Dockerfile.web
          docker build . -t registry.cn-hangzhou.aliyuncs.com/palan/eregistry-desktop -f Dockerfile.desktop
          docker build . -t registry.cn-hangzhou.aliyuncs.com/palan/eregistry-frontend
          docker push registry.cn-hangzhou.aliyuncs.com/palan/eregistry-frontend
